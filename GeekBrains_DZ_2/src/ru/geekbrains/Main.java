package ru.geekbrains;

import javax.swing.*;
import java.net.SocketTimeoutException;
import java.util.Arrays;

public class Main {

    public static void main(String[] args) {
        MassNum();
        MassFill();
        MassMult();
        MassDiag();
//        MassMinMax(); // Мало времени к сожалению до конца не разобрался + буду ещё разбираться!((

    }

    /* #1
    Задать целочисленный массив, состоящий из элементов 0 и 1.
    Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    С помощью цикла и условия заменить 0 на 1, 1 на 0;
    */
    public static void MassNum() {
        int[] mass = new int [6];
        mass[0] = 1;
        mass[1] = 0;
        mass[2] = 0;
        mass[3] = 1;
        mass[4] = 1;
        mass[5] = 0;

        for (int i = 0; i < mass.length; i++) {
                if (mass[i] == 1) {
                    mass[i] = 0;
                }
                else {
                    mass[i] = 1;
            }
    System.out.println("Задание №1" + " " + mass[i]);
        }
    }
    //////////////////////////////////////////////////////////////////////////////////

    /* #2
    Задать пустой целочисленный массив размером 8.
    С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;
    */
    public static void MassFill() {

        int[] mass = new int[8];
        for (int i = 0; i < mass.length; i++) {
            mass[i] = i * 3;
        System.out.println("Задание №2" + " " + mass[i]);
        }
    }
    //////////////////////////////////////////////////////////////////////////////////

    /* #3
    Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ]
    пройти по нему циклом, и числа меньшие 6 умножить на 2;
    */
    public static void MassMult() {

        int [] mass = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for (int i = 0; i < mass.length; i++) {
        if (mass[i] < 6) {
            mass[i] *= 2;
        }
        System.out.println("Задание №3" + " " + mass[i]);
        }
    }
    //////////////////////////////////////////////////////////////////////////////////

    /* #4
    Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
    и с помощью цикла(-ов) заполнить его диагональные элементы единицами;
    */
    public static void MassDiag() {
        int [][] mass = new int [5][5];
        int str, post;
        for (str = 0, post = mass.length - 1; str < mass.length; str++, post--) {
            mass[str][post] = 1;
            mass[str][str] = 1;
        }
            for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++){

            System.out.print((mass[i][j]) + "  ");
            }
            System.out.println(" " + "Задание №4");
        }
    }
    //////////////////////////////////////////////////////////////////////////////////
    /* #5
    Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);
    */
//    public static void MassMinMax() {

//        int[] mass = new int[]{1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
//
//        int max, min;
//
//        for (int i = 1; i < mass.length; i++) {
//
//            if (mass[i] > max) {
//                max = mass[i];
//                System.out.println(i < mass[i]);
//            }
//        }
//        for (int j = 1; j < mass.length; j++) {
//            if (mass[j] < min) {
//                min = mass[j];
//            }
//            System.out.println(j < mass[j]);
//        }
//    }
    //////////////////////////////////////////////////////////////////////////////////
    /* #6
    Написать метод, в который передается не пустой одномерный целочисленный массив,
    метод должен вернуть true, если в массиве есть место, в котором сумма левой и правой части
    массива равны. Примеры: checkBalance([2, 2, 2, 1, 2, 2, || 10, 1]) → true,
    checkBalance([1, 1, 1, || 2, 1]) → true, граница показана символами ||,
    эти символы в массив не входят.
    */
    //////////////////////////////////////////////////////////////////////////////////
    /* #7
    Написать метод, которому на вход подается одномерный массив и число n
    (может быть положительным, или отрицательным), при этом метод должен сместить все элементы
    массива на n позиций. Элементы смещаются циклично. Для усложнения задачи нельзя
    пользоваться вспомогательными массивами. Примеры: [ 1, 2, 3 ] при n = 1
    (на один вправо) -> [ 3, 1, 2 ]; [ 3, 5, 6, 1] при n = -2
    (на два влево) -> [ 6, 1, 3, 5 ]. При каком n в какую сторону сдвиг можете выбирать сами.
    */

}
